generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
  editor
}

model User {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  email      String     @unique
  name       String
  password   String? // Make this optional
  image         String?
  role       Role       @default(user) // Set default value as needed
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  categories Category[] // One-to-many relationship with Collection
  accounts   Account[]
  sessions   Session[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.ObjectId
  imageUrl   String?
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
  imageUrl  String?
  userId    String    @db.ObjectId // Foreign key for the User
  user      User      @relation(fields: [userId], references: [id]) // Relation to the User model
  // creator String
}

//Format the File:
// Press Shift+Alt+F (Windows/Linux) or Shift+Option+F (macOS).
